name: build

on:
  push:
    branches:
      - feature/workflows
      - main
    paths-ignore:
      - "README.md"
      - "docs/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "docs/**"

env:
  GO_VERSION: 1.19.3

jobs:
  benchmark:
    name: Run Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Workspace init
        run: make workspace-init

      - name: Run benchmark
        run: go test -bench=Bench -short -benchtime=5s -benchmem ./core/... | tee output.txt

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: "go"
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: "130%"
          comment-on-alert: true
          fail-on-alert: false

  lint:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/open-feature/flagd
      GOBIN: /home/runner/work/open-feature/flagd/bin
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: make workspace-init
      - run: make lint

  docs-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: make workspace-init
      - run: make generate-docs
      - name: Check no diff
        run: |
          if [ ! -z "$(git status --porcelain)" ]; then echo "Doc generation produced diff. Run 'make generate-docs' and commit results."; exit 1; fi

  test:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/open-feature/flagd
      GOBIN: /home/runner/work/open-feature/flagd/bin
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: make workspace-init
      - run: make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3

  docker-local:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          submodules: recursive

      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          context: .
          file: ./flagd/build.Dockerfile
          outputs: type=docker,dest=${{ github.workspace }}/flagd-local.tar
          tags: flagd-local:test

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          input: /github/workspace/flagd-local.tar
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@f0e3dfb30302f8a0881bb509b044e0de4f6ef589 # v2
        with:
          sarif_file: "trivy-results.sarif"

  integration-test: # caching tests are disabled due to slow file I/O in github actions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          submodules: recursive

      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Workspace init
        run: make workspace-init

      - name: Build flagd binary
        run: make build

      - name: Run flagd binary in background
        run: ./bin/flagd start -f file:${{ github.workspace }}/test-harness/symlink_testing-flags.json &

      - name: Run evaluation test suite
        run: go test -cover ./flagd/tests/integration -run TestEvaluation
